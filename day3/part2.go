//usr/bin/go run $0 $@; exit $?

package main

import (
	"fmt"
	"strings"
)

const input = `rZTmmqbBrmBvSTCwDDtlwjqnqnnq
dhgQHhPfVgPlPdFzFzFgdptCQjtnwCntjsCppRtRND
lVdVHWGPvTvmrrBW
GmJBqwPLhfPBfJfvfffFmwtjDprpzVpVMpcDrVjzzcjpML
HgWnRnWggWbNTWbCnPCgCnsjcVDrjMrdzjprMMrzcHDrDr
SsSsRsCSPSPBvtJt
BLtwwTBmLSTlMsjdZmFZZP
hzbzNNrbqQbhQDDrhCprbhDCpvFJJPjMZJZgjjPdlvZjZvvl
fbNrqrVDfdfGzqcHTBTVHwcTSHcH
lcDdcrCDCRHJHBllPR
tNGQwQhtzLhJBRHbPMBMjGBj
NZZZpVqqFqpQpCTZcTnrTrnJJC
BSNLNzbLLsMGSDLSsSBdVwTVQFdTVTtqgTwNVN
lRjplvmWpgrqwlVFFr
mfRCpWwvChZCBGSzZG
mDSlGBGwhGhmLHCQnMMVMLMVFJ
WTNfjNgzNdgNWfsgsWWcWgfrVrnnFHQbrHvFrVVdHMrnCr
FpcggcNttFfqSqDtwBDmhZ
HzNsHbGsddQHPrsNPNsTnNjMbjVbcVlMLjMjLtlttjjv
CQfBZDQfWJlJlLJhvMMv
WwwmWRfFwmCmwwzQzzzrdGNHFzNT
JDvhJfdZZTdCTnmmTH
qbPcsqbjcbstjbgnvqpRCBTCmgCm
WPbPtbtVjWQsPvSVzSZLMDMVfLZJ
NjMbTZPjHjbdBqNBqFqDFz
LCcLSRLStRrLHShCtRfcpCtpQVqqDFDFqDdFpBddDQQFdB
htCGtrSJLfScvwJvggbgwHgW
hmPTmfFPwBFHhsBstJldltstVDSVrrpD
CjzNGQjnRMMvMngMLGRVRBltVrVppqptVSqlVJ
cLBjgjGGGCgvLLnhZThwcfTHPTcPmw
SzwsVwcGsTVTmzmgjsLsmWWnGJZbbJbZtZqnDJntGq
NHQvpvNRflHvQpPMlbtbZqbFDnWlqVrD
dpPQVdpHMPRBpfCszCmsLsmcjdSg
wZZGGrnGVvZGPTcTnGvVCVpmpJSgCJtNpWgWVgmC
MdMRqqzMLDtQDQmzJg
HBMdRLLBLBdbbBLHlRjLrHPPnTvGtTcwhGrhZtvh
fcbcPWmvPvftWbDNVJJDrrhsJs
wQvzqvpQQzHQwTTNVhrBGJTJ
ZCMvzHMRCqggmWmndPngnn
VjvVJvjdgjJNTVgdpjRttsTHSsbFqqRHSbBR
nrfZLZCZnLnCCncZCrCQLSsFHHqtsSsSSBcHGtHsFh
nQlLMrmwZtmwCMmMwZmtLLggvNvVjjNJglpDgzNdJJvN
bCjQbTzCBlCvpqPTbZphtWWRhtddmDRRdRhPhh
sLJsnJFcsnJcMMjNnfsjDDcDWcRgggtmwVRtVmhh
sMsJLFfGrfFnrSNJjHzlTCCCQzpbBpzQzSBQ
gWRzWwcrzWcgZHRzHmcpTLTgTLhQDSgFFLTpLD
bBJfvJCssGJNjvPmbbmbLTQFTLQp
jsCqBJsVsGBqCfNcWMmrRWlWqmwMcz
cLjncLlQbllRhlnQTRblwtndsgpWdqgmnWNWmGpvWzdgzz
DrFJBFFHZrrDDVJSNmpsWdzVpmzdqqzpzq
FJPPHfDJPDPCZSZHFSDPCJtwRjClttNbwwjQLjcRhLlb
tZZRtWCRtsspLRqSVqbPDfVvlfFDqV
dgvMcccHHDHNrrbf
wGwdgBBhhcBhCvTZvtCppp
LRRNFfffFzzcrGRffNfcGNzJnrnhjdDMHHnrWdlmhddHnjrh
BvStvwSqqCZVqtvpZBWMMhhFhWdmdMWMhm
TTvqSbwqTPpZPzQsQRffsFGQ
phZZpGbGVmqDbPTF
tlNwlncnzwddcrGPlFmjlTTlfmjD
zntnczBMdvBnnvnthHHZMJhCLpZSSRGQ
ZwLLnbCDfClLZzZwDzCCZDbmNNdNtdBVNTNdNWMFtTFzTVFd
vlPlJRgRhQcPQQjpcRQJBBthNdtddtthtFMNWqMq
ppJgsgrJpJgslgrgRSPDDDLZLnHbrLHbwLbHfb
sBrNSTsrgDDMSjpPWVVqhppbsbtz
HTJfHwFwRFCnCPbzbzVzbVWq
QTcvvcmHnwGvvnRNrLglNNLNDZcZZL
qNNHSSFgbhLHHNfBwlJjQwwBcwQN
WZnVrZrMpVvZmVjwBvzBQRflJJcz
pWVGpWnmrmWjDmtnWVVZmtPFPCSbPgqgLSqtHCgTHgHH
QcQHqhpqQGbvbqHNqfhsQfHczZMlBZdZBlSFFZpZlFMDRFBM
TPVgmmrjtWjwrtwgLmTwLPMDZlMDMnSzzZgglzldBlgZ
PVtPrmPddrPCVTNqcHvQbHsCQNGh
PnsrrsdsSrnCvJCJBVwNqcHPRwNLWHwV
pjTQlgGWMjZBbRHHHZcbVV
htpThhlMjFdWrtDrfrsn
GZjHFHgjpbZQbgpHdgpjjBMTQsMJWzWRcsLMCRWzcz
ltwPlhwPSlwmmDhfrMwlzLLTSWJRssCBJWzsccCc
nfrnrntPnDmDDnPrwmvlVGdGFFNqjVHNjbGFjgFNMp
BjHBvHHqnBHrnnvclqjqplRRRQSfRpJQwPswStJsJQSt
wVFGWdVZVhWVDzVdZDSfRJtLLZJPtJRJSfJP
TDhCdWmNwzTWVmDBvMlrHmcqvHBMng
HpDpHvjvCjDHZHVWJSCrnrJgnNwr
rtQhssBTlRMblLBTtNnJFVSnnwVVwVWNnb
BhrchlmBBszfjmzzffDf
MMcJtJmVmnppVmSSpbCRvDvDRLDqvBRRCCMC
GWNNGGGfrjlHHHNZZZLNZt
jGrgfFjQrdhlhhgQFrVpnpVgmStPSJSPzJPP
wvJNJNtfGGphQQjFdGWj
DzSLzPczBrqzPrLMjSpjWMlSpQgwWd
zPHRqBLqqHzPcBDPsznZCwJsnfVnmZmtVntC
ttVWftWgGlWGfgtLtNddrNDdNvsLrdLdNm
JCcFSnbBqbRbSBCBqTFSQCmwMjRsrDRNNjDddssNfDrr
cBHBTTQFJJCCJQcCbCcqnSftHtZhHzWghPzVZpPglVVW
ZfSGFQdbrHQSbFFqlwLjCjLPlqwj
gmWJgNppJrgMcchzhmzNczqRsVRCjVRVsWjVRLRqqCVq
zDTchzJJJhgJJmBJhBTJBggtQHGrdbfnHHDHGvftStvHdf
LdRCgCDvCbCdnLnCvpGtQlhffNlhtSlQNtQlhb
BTJTVFJrqMVmBmdTMFNHNVQQQSHHffQhNlHQ
MqcBmqPdFBdjPPBTJqpZDDpgGDpgWCcvGCLp
gzFbjgqljdqblbbddBZTMvTBdMsVvm
SHpGWBCtSPhNpPSSSpwSNGNSTLTVVsZsLrvRrRvVLLRCvTvm
NwhHwPhDtSGpbDcBQqczbBBj
BhzLDSflLlTTRfqGpJZZQsqfNF
ndCmMHHRPbCjCwVPVmjtwdMVsNGJQpZQsJqJqNJdFqJZFrNq
CtwbRcRbttHBSgTcgShvTz
pffmzCtppTSWtzdhbJdZvvHVnvdHVV
WMlLWRGGQWMGrQJcVbvbHnvQHbhv
LFwRFDlqFPWfTszp
sbfFTbbbzJzfbJZSbnsnfTchGWWJGlhWvvBGltgVttgWgg
LLLDpHwMDLmNjmChVWWBwthrGQvgQl
dLMLDMLBNddPHmpMPfqPcPzcsSbbccqb
MNGMPvHTnfTfgSFrSMMgwFMw
QQRpjBsqhRQsldpqRQQQmjZFtrrzSFFccvSWwwjwFWZS
smsBbQlRlmDpDBqpqblpLbLLfTfNVPVVGnTvTLbb
gsmFlVCShjVwNNDNgWBNHg
dMtQvtQRrtbLMqMnqqsq
GQfGQPRtrPddPtvcvcQZRvRpJlVJFTlpZTVJpFJsSCFJjh
LFmpcmhNfhhnjStshM
qWTCCQrqlQBQcJCqrJdlHDdnRtngRStnPjgDSgSsjM
CZWrqTbllrClJZWbVfmmZcvVzmGZmfpv
qJLCqjwjjJnFqnDQQfqlQMfMQlMg
zmHWPhGGZVGpcCWMsWRRfBBRDs
bdpCcGmZdNFTwnSjrd
TttqjWvQjZTtzwWtdBCMdBMqdGCBRnhR
bpJlcNFVzbcBhCMMCChbMP
cJVgrplDcslrlrpFzwTHQsSTWLQtjWvLWj
hWlmVhlpcNpScSVtNbjrbGqdHGjgQrdrRdqG
LPBDCvFszTCzFzFzBBffHrJrrGHRHsgRjsjrjJqc
DTCMMzzvvnDvLvLDTTBTCMFBpWpthShmwmmWmwchptnhwWWt
dfHqNQSQQNQBHHZJfJCMCfVcRJCZ
GjLrDjgvFrFzjDgPGvLzgmmjCslRZMMCststJMlRcPVTRJJM
vjmmvrnzDDLVzrdSWNBQnWwdhHhH
jTmMBMNBTVSqNgBTjgNMqMTgWZttCmLfpQQZQWtLCdCGGtWC
zzVVbhFcbzstWCZpsftsQZ
whwhwPnDhHRhbRVHcSNllvMnNnjMjSBJMl
nSvQgHWtZvHlgtvqgqngjSFFFDNSfsbbbjGfcsSr
PPVRdNwRLhdLLCCwbscBBfGfbLjjjDbs
zVPPhMhMmhhVppRpMNRPhMQnHqZtHZvgQzWgQgvnqnnq
JdFHDSShfgDNMhGTBlwGGJqjjJTr
PCnWnsvpzPnmLvmsQGRGWrwlWbljwTjFGl
PtnLzQCQLfSFctdNhN
cTrjrCNrLjTFCTrLCdSVNVlJVSVVGJftNp
swQHQDsQGRZGffQV
ggffMhhvgswDgDnhhfCcTjrcTjWBWCMmcjjc
wGHvHCvWlMLlhGWwvvwlNnRBRdDNDBLDRVVDFdBD
MtJJTPTTQNFRNFRfTn
crSsmmJjmtgWmMhwWMCw
sQQHWGsWcWWrZQQshNtHFNBCNBqHFwHB
jSLbMSdfjSjFtFghNtFBMt
RSdmtLmSLLzSLdjjdTTbVvsVVsvZcZQzWPWcQrrW
PCCTzTgDgzVZZLgcgcdswMMMgs
hSrqdqRQSjqtNqcsGWcGLwMGMf
tlQJRJSRjpJjZPdpDTdHbzTn
pqBGDDtQBDLVhfCtCZVV
bTNFcljgbdlFjbldjFdTTcfZqZVsLhgfVLhVhZVHfZwC
McJjFbvTWvmRqGRr
JRcsJDfgncfHnqSBqGSTGQsTTz
vlBlLlpNWpPhVmTQpQSzqbqQ
CBPvjFNMlFhCCRtZJZZHfg
RFQQTdQQLtThDhfRcHdLfFcHJCWtbbPnJWJPNJbnJsvstvJv
ZmMlMlwwMrVzwVqrSqmZrqbplpNWFbWJnvvspWWNslNs
gwwmFrgMGgFqGTHRhHjDRTHH
dNfQvLdQsvSLsHsLBgNWVggJJCWCDJgnJJ
ZTGcflFlFRfhbwhbPcbbbWVWrMVMnDJCCWmVnDJCmF
lTfZTpjjZhPhRcqtBtsdSQpqQvtv
frfccJzjTBwWwcJwjrwcBVCVTRCGnpsGGSmpVSSpDH
hhhvghZvZlZvghPbdtqGpGVCRHGGmsRmpsvGRV
MdPCNqdtgZdZgcWMLzcffBcWzM
LdsfZNRsRWvvfLSsCpSgCDJbPcCp
MqTVtHHThllGMthlBHzcSzGGSFppPgbJDFbF
nVHwVlHmlhRWdjjjLvwD
whhWFjjzhGmGCrFFFzvtZsLZVStNZWLNpvtv
nqPMBdMQBqJnnfqdsSNfpvtZsSNtNpLp
HJHnQHqQlhwLlhzmGh
nMlmnfHmfjjmflLlLdzJTrsrBLJJLBbBSJrJ
pZRpFFDWctFPNtWvbbrTqrszTbqbcBqr
RpRGNPPvPFsNvflmdfwMGHhmmH
PjPzphfpJFPvFRHDbP
QlLlBcvBvnWCWcVCnFTTSnFDNdSRRRHN
sVtlVcVtmqjMJphrfvJs
dRRHRfrdRHHlCTTprlNCvhVVvhzpQhVvtmntmhtz
JMDJBLwQMBDDwZgJnhSzhmWStMvzbbmm
PPwJwGqPGQcDcHHjCqRlRCjrCN
GgGgbGSGzGbMBBzGDVFbDMRpmcWWTTfcFTchsJdcWJchTsch
NCqCttLZrCPQtNrtWqfhWJJqscmTJwsc
ZClvLCLmPjnPllPvCLrmnDRjpDzGpMRDRRDBGBgSzb
tvwCtDMQvJJPJtvQprjrjrvBjsTZTWTj
gFzgldFZSlSbgFlZmGmcFqsppjsLqrBsLBrqqWWjdB
FlcbhhNNbmHmcbSSzzggwDDQDwJnVCVHPtMVnnZQ
hrCnnrFrCvFHzVFdmmFm
GDTBsSfDDBRwfDsQbSdjHHVlqpmpgqWqpH
TBDBDBQBwcsPsPGQswPcZvJMrJhnrNhrNNnHJM
CztfzfZLBjMqZZWZgT
VPcblQhJvtgbvbgb
wwFQwVRPRchwcrJcPzfRpzspBfzfnSCzmt
FMnmnQnFNdQFRtmFmfNsCsjfpfrHHfVffV
DlLqDPwGlbVCdVbddbsr
GPDzLhqwLqDMFdFJRWzQzd
CSDSrMqnVSCTsPGPZpnPPGvP
jhBhhqBQQlhgjthBhlhJpLlwLLPwsswsGZpWPLvP
dgJQzgFjzjJFzzdHFzzzJMmNHCrSMSCSNbRqDCMCmR
cvSPvzWwzcTbVWSPbppWVjsGjdHdQSlNsQSdNGqsHZ
MRmCfmFBfRJfjqrdNMZHZQjQ
qgFtChDCFgmCnppPnczPbcLpnL
RllsdrhQvcVqmVzQcm
gGgnrZZMrFWFpZcccVmHqjVmHHnJ
ZrMWTTbbGMpbtgCTTZgZCWCLhwdsLvhhhPhNSldvPwPNfNlR
ffMqqznPPMzHfdfcdBJGTMVTGjRmMMTBjr
vtDwSwpmDsmQZswWSDhhDQGrjTgJBglRsjTTjVRBVTBl
ZthhQStwppSSvbvNDtWwnnbffmPnHPFHqmzFbLFq
CcHPmPcTJTqNCPqbqJqLgNJrjWtrftjrrnBnsWtjtBsfTB
ZRLwhzwLRlhLpdlpjftBBnBjWsBBvn
QhzhlwDdMzwFSwRLMJqqcSmqNPgmqNHNVP
WzTWppwcQNppbQrJHhhrJfcdfnsr
MDMLlLqjvqSBvVCLGJhnJsrDnnrDdhDffZ
BLMCBCBlLlGSJvSPBMLqGJVwwQzPpNRWmTRzmzpWWFmTbQ
WpWpWsfcBFjwGgqqtTQrTpgg
JLHNPPvLJRZdnNJZHRzGGTzjrtMqMJlQzztt
vHHnbDnLnHRCRnvdZdbHLNPfBfBhcffmcSSsDjcVwVBmcS
DDZlblRRLQcNpJNhpL
VPrdJfBFFBBWBrdvJPCBBdfhqcFhchNQcpNgzqcjphqFjp
mWVPfMWWfBMWWwPrWvJHDbZGZmZRtDbsDbSb
PDwwBzvRRzPCBPgnrwvvCDsSSccWscFTnSshWnZsSZcF
GJtNGHfLbQtQQJQGhhhShgSZWVWJjSFF
tmHlfGfMlBzrRDMggz
gSBNwDNJglSwlDMtTCsZzStTsSCC
hhfGdGcFhrqFmQddrhvvrdGRRtQMTHMCsbZbZtRTsbZsQs
mrmrFqqqccdhWjGcnLpBDWgNWpCBlgLW
WgmBsqMBnLLGnGnJtFgbbTwHttTwHF
cQjcfpVQfCCPSMjCcCPSPjVwbtTlTtwJbTvJJHbzHFFJ
PCZDCZffCdpQCdDWrGGsnLqWhnrM
gppVszSgMPMPstzNpPMQpnGfDJhfnGLLGnfLfQlLfh
rBFcCcrbmbJJJWhbhLVL
wqcmRFZqmcvvCZBcRvcVwNsztSPzHstSgzMNSgpS
qzLJRZfpRZtNNMSfftFN
QDnPHCCGvbQnnCwMMlcFgsgHFFlNlV
rPCMQnbdhRLqJLzhzB
dfdrfqBqBtRwBsFR
cDczzSMzDcSGSQbCfFjRFZtZCZmtwZRt
bVcJSbVbSDllNrrWWNdvWf
WSPPWlppCQlZPGqPjhcjfs
JJrJrRTHNTNLbbNLcfzzSfSzGTjsqZsj
FVRFNgVRbDbdwlWpSnvQnVQM
znJTCRCSvRpzVBjWJdBBBVNb
gggcfGDrGDZqwhwfGBjbHVSVdtdjtBShWj
ZrgmqmGDGfDPmrfwPmsqZPfCpsFFnFvlSMCLLvpSRFFMvL
qhhfgzzSGDSZSgfrcjhcjCCndnbjdr
FPTTTwBHBPJMJVJBGwmjvCmBdjjNNcrjncNc
GwTttMsTtHFtVFtDplSDzgRpDqsfpD
vzwsPlvFFdJGjQwdJw
HHNbpDTbVMvTpmMHvddtRtJJjjJRdLmLGj
HbqHcbMvlWrqzWFW
hMJMJBhPTnDMJJTGmmGmwDpRzRpFWz
lSZPPNvbNllPpGRFwwzRNGgm
bHZCZbvrttlZClqbHbsrbnQMThdJBQhVQBPdscnPQB
ZRNZfffHLfDLgfNlHWwhChWzzVdcVH
jpJmJjvnTtSjtJvQWldPWcBdPSdWzzcz
jGGsGsFFFGnJtTvvTszZNqqNgrsDLRDqLqrL
rrblpnfnVVfspgrppnMrpsrGdGdzgddzPFCjCzjzzzjtDC
TRWTJwThJhRvwZWvJBZvqDzQzGBPCzdHGjdGGGttzj
JSZmTZZwWvqhwqrrVnrLnPmbsbPr
MdhjZhZZDTdPDcgCSLfgCpCL
vvwtnwnssznwJnwvBbBBHHRSSfLLcpWfSWWzcLRTRWpf
snJtHJHmbBsrswNtsnjhlhqZPqTjjTjQMPGr
gmSnWMMzvvNWCNWCJJph
QfqjcbcRGGjcwhNppNqMptdNHL
rGPbflPfwPvlFFvTTMlg
trTdMJvtlLntbCRN
GBZsGFGBcRbZCRNR
SSGFmFjqVNFVssjSVjqjvMMQvgTmMgMMQWMmTdhJ
GcNcdNdwMZSqNZSSScSdqGwDrCmJMVrCmHmVVCFVJDrmFV
jTvsRsWbjjbQQfvTThFVZVTVDJVHlCFr
BjnBPfRWBnRsnvBsRBQQSSGzpZLdgwcLZqzgzPLg
clNrNpjbNpbRrCpsRlrVtjwVZwttttZVgMHwZS
FJBBDhJDTQFThqssvPJBBvHMWLwgwSHtWLZMwZgwSg
qQJfdJDhGsBBDFJBnlzGmmnRzbCpcrzl
ZPbfgBvcZPPZPWWWWBFbQllndnqdnlpwdSNfnwdN
LzLrzDhmDRRJpJzptDhCSCqHMHqnqSlHqMSQNHQS
zTsRzsDTJszzrrLRstrGJLsPpbVVPbcgTBcZvbPVFggbjP
THpVHSrLZrzzvPtJdtsqLssdLW
fbfCCQgQllWwwwFmjRsPcqcPsJJJdscPdmsP
RNQlQgCFfgwVppWTNvGrvn
PqFwwcqzDlFJDDQVMjQmMBjG
ZgTZZndCpBMVNTvvQc
pHgtZdtRnnLhcshdhWzWSFlbsJsqzzzbSb
zjfgjMhhgMJdfHQHWdVQvR
CrmpmpZpHQptHHHQ
CnwcFbNCqQBFwwFFsPslJgsjhMlMcDJP
HpnStLpnQnHnqQLQqpMSSWWZbswNcNqwbNsfwqGGZc
dVRRTCTVJNLcfJcJFb
gzjTRCddgLDdzdjCCrBjjdhhBnQPSSBhvlSBQvMhQMnt
lFTlwMwZlblSjrCpVvvsptspZpps
nHRPPnqnhPRqJHhqqhfdPqLCHvBCvvscvVNczztCCvsvtm
RJDghDhRhhGPPqGhsPhhFSbbwGSFjGQlWTrbwQbW
RRjgNPTRFhglgNNjTsmGqCCGZfzmHCnZGnZCqq
SppWLbtbCzZMpHMZ
dSDbbJdVVlHFNlll
dtZdGmqqtmzhtqZtZswzSnSjfNHNVjzCWCnCffHz
LgpMFMvlhvRMhhDDlvvQLFJCfSCHnFVJnSnJHNjSnj
rRBLcQcpQcrZbwsZshbs`

type group struct {
	elfA     string
	elfB     string
	elfC     string
	common   string
	priority int
}

const items = `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`

const exInput = `vJrwpWtwJgWrhcsFMMfFFhFp
jqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL
PmmdzqPrVvPwwTWBwg
wMqvLMZHhHMvwLHjbvcjnnSBnvTQFn
ttgJtRGJQctTZtZT
CrZsJsPPZsGzwwsLwLmpwMDw`

func main() {
	lines := strings.Split(input, "\n")
	groups := make([]group, len(lines)/3)
	sum := 0
	for i := 0; i < len(lines); i += 3 {
		grp := group{
			elfA: lines[i],
			elfB: lines[i+1],
			elfC: lines[i+2],
		}
		grp.common = findCommon(grp.elfA, grp.elfB, grp.elfC)
		idx := strings.Index(items, string(grp.common))
		if idx > -1 {
			grp.priority += idx + 1
			sum += idx + 1
		}
		groups[i/3] = grp
	}

	fmt.Printf("%#v\n", sum)
	// fmt.Printf("%#v\n", groups)
}

func findCommon(a, b, c string) string {
	for _, r := range a {
		if strings.ContainsRune(b, r) && strings.ContainsRune(c, r) {
			return string(r)
		}
	}
	for _, r := range b {
		if strings.ContainsRune(a, r) && strings.ContainsRune(c, r) {
			return string(r)
		}
	}
	return ""
}
